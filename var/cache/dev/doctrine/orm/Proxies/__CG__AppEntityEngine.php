<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Engine extends \App\Entity\Engine implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Engine' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Engine' . "\0" . 'models', '' . "\0" . 'App\\Entity\\Engine' . "\0" . 'subModels', '' . "\0" . 'App\\Entity\\Engine' . "\0" . 'images', '' . "\0" . 'App\\Entity\\Engine' . "\0" . 'capacity', '' . "\0" . 'App\\Entity\\Engine' . "\0" . 'fuel', '' . "\0" . 'App\\Entity\\Engine' . "\0" . 'abbreviation', '' . "\0" . 'App\\Entity\\Engine' . "\0" . 'faults', '' . "\0" . 'App\\Entity\\Engine' . "\0" . 'weight', '' . "\0" . 'App\\Entity\\Engine' . "\0" . 'carDetails', '' . "\0" . 'App\\Entity\\Engine' . "\0" . 'powerIncrease', '' . "\0" . 'App\\Entity\\Engine' . "\0" . 'oil', '' . "\0" . 'App\\Entity\\Engine' . "\0" . 'cylinders', '' . "\0" . 'App\\Entity\\Engine' . "\0" . 'comments', '' . "\0" . 'App\\Entity\\Engine' . "\0" . 'ratings', '' . "\0" . 'App\\Entity\\Engine' . "\0" . 'parts'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Engine' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Engine' . "\0" . 'models', '' . "\0" . 'App\\Entity\\Engine' . "\0" . 'subModels', '' . "\0" . 'App\\Entity\\Engine' . "\0" . 'images', '' . "\0" . 'App\\Entity\\Engine' . "\0" . 'capacity', '' . "\0" . 'App\\Entity\\Engine' . "\0" . 'fuel', '' . "\0" . 'App\\Entity\\Engine' . "\0" . 'abbreviation', '' . "\0" . 'App\\Entity\\Engine' . "\0" . 'faults', '' . "\0" . 'App\\Entity\\Engine' . "\0" . 'weight', '' . "\0" . 'App\\Entity\\Engine' . "\0" . 'carDetails', '' . "\0" . 'App\\Entity\\Engine' . "\0" . 'powerIncrease', '' . "\0" . 'App\\Entity\\Engine' . "\0" . 'oil', '' . "\0" . 'App\\Entity\\Engine' . "\0" . 'cylinders', '' . "\0" . 'App\\Entity\\Engine' . "\0" . 'comments', '' . "\0" . 'App\\Entity\\Engine' . "\0" . 'ratings', '' . "\0" . 'App\\Entity\\Engine' . "\0" . 'parts'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Engine $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getModels(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getModels', []);

        return parent::getModels();
    }

    /**
     * {@inheritDoc}
     */
    public function addModel(\App\Entity\Model $model): \App\Entity\Engine
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addModel', [$model]);

        return parent::addModel($model);
    }

    /**
     * {@inheritDoc}
     */
    public function removeModel(\App\Entity\Model $model): \App\Entity\Engine
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeModel', [$model]);

        return parent::removeModel($model);
    }

    /**
     * {@inheritDoc}
     */
    public function getSubModels(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubModels', []);

        return parent::getSubModels();
    }

    /**
     * {@inheritDoc}
     */
    public function addSubModel(\App\Entity\SubModel $subModel): \App\Entity\Engine
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addSubModel', [$subModel]);

        return parent::addSubModel($subModel);
    }

    /**
     * {@inheritDoc}
     */
    public function removeSubModel(\App\Entity\SubModel $subModel): \App\Entity\Engine
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeSubModel', [$subModel]);

        return parent::removeSubModel($subModel);
    }

    /**
     * {@inheritDoc}
     */
    public function getImages(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImages', []);

        return parent::getImages();
    }

    /**
     * {@inheritDoc}
     */
    public function addImage(\App\Entity\Image $image): \App\Entity\Engine
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addImage', [$image]);

        return parent::addImage($image);
    }

    /**
     * {@inheritDoc}
     */
    public function removeImage(\App\Entity\Image $image): \App\Entity\Engine
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeImage', [$image]);

        return parent::removeImage($image);
    }

    /**
     * {@inheritDoc}
     */
    public function getCapacity(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCapacity', []);

        return parent::getCapacity();
    }

    /**
     * {@inheritDoc}
     */
    public function setCapacity(string $capacity): \App\Entity\Engine
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCapacity', [$capacity]);

        return parent::setCapacity($capacity);
    }

    /**
     * {@inheritDoc}
     */
    public function getFuel(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFuel', []);

        return parent::getFuel();
    }

    /**
     * {@inheritDoc}
     */
    public function setFuel(string $fuel): \App\Entity\Engine
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFuel', [$fuel]);

        return parent::setFuel($fuel);
    }

    /**
     * {@inheritDoc}
     */
    public function getAbbreviation(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAbbreviation', []);

        return parent::getAbbreviation();
    }

    /**
     * {@inheritDoc}
     */
    public function setAbbreviation(string $abbreviation): \App\Entity\Engine
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAbbreviation', [$abbreviation]);

        return parent::setAbbreviation($abbreviation);
    }

    /**
     * {@inheritDoc}
     */
    public function getFaults(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFaults', []);

        return parent::getFaults();
    }

    /**
     * {@inheritDoc}
     */
    public function addFault(\App\Entity\Fault $fault): \App\Entity\Engine
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addFault', [$fault]);

        return parent::addFault($fault);
    }

    /**
     * {@inheritDoc}
     */
    public function removeFault(\App\Entity\Fault $fault): \App\Entity\Engine
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeFault', [$fault]);

        return parent::removeFault($fault);
    }

    /**
     * {@inheritDoc}
     */
    public function __toString(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getWeight(): ?float
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWeight', []);

        return parent::getWeight();
    }

    /**
     * {@inheritDoc}
     */
    public function setWeight(?float $weight): \App\Entity\Engine
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWeight', [$weight]);

        return parent::setWeight($weight);
    }

    /**
     * {@inheritDoc}
     */
    public function getCarDetails(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCarDetails', []);

        return parent::getCarDetails();
    }

    /**
     * {@inheritDoc}
     */
    public function addCarDetail(\App\Entity\CarDetails $carDetail): \App\Entity\Engine
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCarDetail', [$carDetail]);

        return parent::addCarDetail($carDetail);
    }

    /**
     * {@inheritDoc}
     */
    public function removeCarDetail(\App\Entity\CarDetails $carDetail): \App\Entity\Engine
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeCarDetail', [$carDetail]);

        return parent::removeCarDetail($carDetail);
    }

    /**
     * {@inheritDoc}
     */
    public function getPowerIncrease(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPowerIncrease', []);

        return parent::getPowerIncrease();
    }

    /**
     * {@inheritDoc}
     */
    public function setPowerIncrease(string $powerIncrease): \App\Entity\Engine
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPowerIncrease', [$powerIncrease]);

        return parent::setPowerIncrease($powerIncrease);
    }

    /**
     * {@inheritDoc}
     */
    public function getOil(): ?float
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOil', []);

        return parent::getOil();
    }

    /**
     * {@inheritDoc}
     */
    public function setOil(?float $oil): \App\Entity\Engine
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOil', [$oil]);

        return parent::setOil($oil);
    }

    /**
     * {@inheritDoc}
     */
    public function getCylinders(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCylinders', []);

        return parent::getCylinders();
    }

    /**
     * {@inheritDoc}
     */
    public function setCylinders(int $cylinders): \App\Entity\Engine
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCylinders', [$cylinders]);

        return parent::setCylinders($cylinders);
    }

    /**
     * {@inheritDoc}
     */
    public function getComments(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getComments', []);

        return parent::getComments();
    }

    /**
     * {@inheritDoc}
     */
    public function addComment(\App\Entity\Comment $comment): \App\Entity\Engine
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addComment', [$comment]);

        return parent::addComment($comment);
    }

    /**
     * {@inheritDoc}
     */
    public function removeComment(\App\Entity\Comment $comment): \App\Entity\Engine
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeComment', [$comment]);

        return parent::removeComment($comment);
    }

    /**
     * {@inheritDoc}
     */
    public function getRatings(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRatings', []);

        return parent::getRatings();
    }

    /**
     * {@inheritDoc}
     */
    public function addRating(\App\Entity\Rating $rating): \App\Entity\Engine
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addRating', [$rating]);

        return parent::addRating($rating);
    }

    /**
     * {@inheritDoc}
     */
    public function removeRating(\App\Entity\Rating $rating): \App\Entity\Engine
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeRating', [$rating]);

        return parent::removeRating($rating);
    }

    /**
     * {@inheritDoc}
     */
    public function getParts(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getParts', []);

        return parent::getParts();
    }

    /**
     * {@inheritDoc}
     */
    public function addPart(\App\Entity\Part $part): \App\Entity\Engine
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPart', [$part]);

        return parent::addPart($part);
    }

    /**
     * {@inheritDoc}
     */
    public function removePart(\App\Entity\Part $part): \App\Entity\Engine
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePart', [$part]);

        return parent::removePart($part);
    }

}
